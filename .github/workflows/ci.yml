name: Java CI with Gradle

#main, dev 브랜치에 push, pull_request시 작동
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    #체크아웃 & secrets에 등록해놓은 설정파일을 빌드시 사용할 수 있게 복사
    steps:
      - uses: actions/checkout@v3
      - run: mkdir ./src/main/resources
      - run: touch ./src/main/resources/application.yml
      - run: echo "${{secrets.APPLICATION}}" > ./src/main/resources/application.yml

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      #gradle빌드 권한
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      #빌드
      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build -x test

      #빌드 실패 시 comment등록, pr closed
      #if: ${{ failure() }} 를 사용하면 직전 스크립트가 실패 시 작동한다.
      - name: If build fail
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            const pull_number = ${{ github.event.pull_request.number }}
            const updated_title = `[BUILD FAIL] ${{ github.event.pull_request.title }}`
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number,
              body: '빌드에 실패했습니다.',
              event: 'REQUEST_CHANGES'
            })
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number,
              title: updated_title,
              state: 'closed'
            })